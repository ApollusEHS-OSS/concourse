/*
Contains tasks and setup to use for docs generation

Requires in the buildscript

- classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.8'
- project `docs-sources` that contains under `src/main/asciidoc` the asciidoc
*/
buildscript {
	repositories { 
		jcenter() 
		maven { url "http://repo.spring.io/snapshot" }
		maven { url "http://repo.spring.io/milestone" }
		maven { url "http://repo.spring.io/release" }
	}

	dependencies {
		classpath "org.asciidoctor:asciidoctor-gradle-plugin:${asciidoctorGradleVersion}"
		classpath "com.github.jruby-gradle:jruby-gradle-plugin:${jrubyVersion}"
		classpath 'org.ajoberstar:grgit:2.2.1'
	}
}

import org.ajoberstar.grgit.Grgit

apply plugin: 'java'
apply plugin: "com.github.jruby-gradle.base"
apply plugin: 'org.asciidoctor.convert'

repositories {  
	jcenter()
	maven { url "http://repo.spring.io/snapshot" }
	maven { url "http://repo.spring.io/milestone" }
	maven { url "http://repo.spring.io/release" }
}

ext {
	git = Grgit.open()
	ghOrg = "CloudPipelines"
	repo = project.name
	branch = git.branch.current().getName()
	docsBaseUrl = [
		'https://raw.githubusercontent.com',
		ghOrg,
		repo,
		branch
	].join('/')
	scriptsBranch = "master"
	scriptsBaseUrl = [
		'https://raw.githubusercontent.com',
		ghOrg,
		"scripts",
		scriptsBranch
	].join('/')
}

task cleanDocs(type: Delete) {
	delete project(":docs").projectDir.path
}

task createFolder() {
	dependsOn("cleanDocs")
	doLast {
		new File(project.rootDir, "docs").mkdirs()
	}
}

configurations {
	docResources
}

dependencies {
	gems 'rubygems:asciidoctor-diagram:1.5.8'
	docResources "io.spring.docresources:spring-doc-resources:${springDocResourcesVersion}"
}

def unzippedDir = file('docs')

task unzip(type: Copy) {
    configurations.docResources.copy().asFileTree.each {
        from(zipTree(it))
    }
    into unzippedDir
}

asciidoctor {
	dependsOn = ["createFolder", "jrubyPrepare", "unzip"]
	sourceDir = file('docs-sources/src/main/asciidoc')
	gemPath = jrubyPrepare.outputDir
	outputDir = file('docs')
	separateOutputDirs = false
	requires = ['asciidoctor-diagram']
	backends = ["html5"]
	attributes  'icons': 'font',
		'idprefix': '',
		'idseparator': '-',
		'source-highlighter': 'highlight.js', // TODO switch to 'rouge' once supported by the html5 backend
		stylesdir: 'css/',
		stylesheet: 'spring.css',
		'allow-uri-read': true,
		nofooter: '',
		sectlinks: 'true',
		docinfo: 'shared',
		linkcss: true,
		highlightjsdir: 'js/highlight',
		'highlightjs-theme': 'atom-one-dark-reasonable',
		toc: 'left',
		'toc-levels': 4,
		'scripts-base-url': scriptsBaseUrl,
		'intro-root-docs': "${docsBaseUrl}/docs/images/intro",
		'docs-base-url': docsBaseUrl,
		'demo-root-docs': "${docsBaseUrl}/docs/images/demo",
		'concourse-root-docs': "${docsBaseUrl}/docs/images/concourse",
		'cf-migration-root-docs': "${docsBaseUrl}/docs/images/cf-migration"
}

task generateDocs() {
	description = "Creates documentation for the project"
	dependsOn = ["asciidoctor"]
}
